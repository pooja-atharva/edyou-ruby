{
  "swagger": "2.0",
  "info": {
    "title": "API V1",
    "version": "v1"
  },
  "paths": {
    "/api/v1/friendships": {
      "post": {
        "summary": "Create an friendship",
        "tags": [
          "Friendships"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "friendship",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "friendship": {
                  "type": "object",
                  "properties": {
                    "friend_id": {
                      "type": "integer"
                    }
                  }
                }
              },
              "required": [
                "friendship"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "friendship created",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Invitation sent successfully"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "user": {
                      "type": "object"
                    },
                    "friend": {
                      "type": "object"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/components/schemas/errors_object"
            }
          }
        }
      }
    },
    "/api/v1/friendships/{id}/approve": {
      "post": {
        "summary": "Approve a friendship request",
        "tags": [
          "Friendships"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "User ID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "friendship approved",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Friendship request is approved"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "user": {
                      "type": "object"
                    },
                    "friend": {
                      "type": "object"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "You are not authorized."
                }
              }
            }
          },
          "422": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/components/schemas/errors_object"
            }
          }
        }
      }
    },
    "/api/v1/friendships/{id}/decline": {
      "post": {
        "summary": "Decline a friendship request",
        "tags": [
          "Friendships"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "User ID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "friendship approved",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Friendship request is declined"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "user": {
                      "type": "object"
                    },
                    "friend": {
                      "type": "object"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "You are not authorized."
                }
              }
            }
          },
          "422": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/components/schemas/errors_object"
            }
          }
        }
      }
    },
    "/api/v1/friendships/{id}/cancel": {
      "delete": {
        "summary": "Cancel a friendship request",
        "tags": [
          "Friendships"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "User ID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "friendship approved",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Friendship request is cancelled"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "user": {
                      "type": "object"
                    },
                    "friend": {
                      "type": "object"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "You are not authorized."
                }
              }
            }
          },
          "422": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/components/schemas/errors_object"
            }
          }
        }
      }
    },
    "/api/v1/groups": {
      "get": {
        "summary": "Get User Groups",
        "tags": [
          "Groups"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Groups list",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": null
                },
                "data": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "owner": {
                        "type": "object"
                      },
                      "users": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/components/schemas/errors_object"
            }
          }
        }
      },
      "post": {
        "summary": "Create an Group",
        "tags": [
          "Groups"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "group",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "group": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "privacy": {
                      "type": "boolean"
                    },
                    "university": {
                      "type": "string"
                    },
                    "section": {
                      "type": "string"
                    },
                    "president": {
                      "type": "string"
                    },
                    "vice_president": {
                      "type": "string"
                    },
                    "treasure": {
                      "type": "string"
                    },
                    "social_director": {
                      "type": "string"
                    },
                    "secretary": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "calendar_link": {
                      "type": "string"
                    },
                    "groups_users_attributes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "user_id": {
                            "type": "integer"
                          },
                          "_destroy": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "group"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Group created",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Group is created successfully"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "owner": {
                      "type": "object"
                    },
                    "users": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/components/schemas/errors_object"
            }
          }
        }
      }
    },
    "/api/v1/groups/{id}/": {
      "put": {
        "summary": "Update Group Details",
        "tags": [
          "Groups"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "Group ID",
            "required": true
          },
          {
            "name": "group",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "group": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "privacy": {
                      "type": "boolean"
                    },
                    "university": {
                      "type": "string"
                    },
                    "section": {
                      "type": "string"
                    },
                    "president": {
                      "type": "string"
                    },
                    "vice_president": {
                      "type": "string"
                    },
                    "treasure": {
                      "type": "string"
                    },
                    "social_director": {
                      "type": "string"
                    },
                    "secretary": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "calendar_link": {
                      "type": "string"
                    },
                    "groups_users_attributes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "user_id": {
                            "type": "integer"
                          },
                          "_destroy": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "group"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Group created",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Group is updated successfully"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "owner": {
                      "type": "object"
                    },
                    "users": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/components/schemas/errors_object"
            }
          }
        }
      }
    },
    "/api/v1/groups/{id}": {
      "get": {
        "summary": "Group Details",
        "tags": [
          "Groups"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "Group ID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Group Details",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": null
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "owner": {
                      "type": "object"
                    },
                    "users": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/components/schemas/errors_object"
            }
          }
        }
      },
      "delete": {
        "summary": "Leave Group",
        "tags": [
          "Groups"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "Group ID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Group removed successfully"
          },
          "422": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/components/schemas/errors_object"
            }
          }
        }
      }
    },
    "/api/v1/users/reset_password": {
      "post": {
        "summary": "Reset User Password",
        "tags": [
          "Auth"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "reset_password",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "reset_password_token": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              },
              "required": [
                "reset_password_token",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reset User Password done"
          },
          "422": {
            "description": "invalid request"
          }
        }
      }
    },
    "/api/v1/users/send_otp": {
      "post": {
        "summary": "Send OTP",
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "User created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "email": "email"
              }
            }
          },
          "422": {
            "description": "invalid request",
            "schema": {
              "type": "object",
              "properties": {
                "email": "email"
              }
            }
          }
        }
      }
    },
    "/api/v1/users/update": {
      "put": {
        "summary": "Update User Profile",
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "class_name": {
                  "type": "string"
                },
                "graduation": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "attending_university": {
                  "type": "string"
                },
                "high_school": {
                  "type": "string"
                },
                "from_location": {
                  "type": "string"
                },
                "gender": {
                  "type": "string"
                },
                "religion": {
                  "type": "string"
                },
                "language": {
                  "type": "string"
                },
                "date_of_birth": {
                  "type": "string"
                },
                "favourite_quotes": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User profile updated successfully"
          },
          "422": {
            "description": "invalid request"
          }
        }
      }
    },
    "/api/v1/users/verify_otp": {
      "post": {
        "summary": "Verify OTP",
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "type": "string",
            "required": true
          },
          {
            "name": "otp",
            "in": "formData",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "User created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "email": "email",
                "otp": "OTP"
              }
            }
          },
          "422": {
            "description": "invalid request",
            "schema": {
              "type": "object",
              "properties": {
                "email": "email",
                "otp": "OTP"
              }
            }
          }
        }
      }
    },
    "/api/v1/users/signup": {
      "post": {
        "summary": "Create User",
        "tags": [
          "Auth"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "email",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User created successfully"
          },
          "422": {
            "description": "invalid request"
          }
        }
      }
    },
    "/oauth/token": {
      "post": {
        "summary": "Login",
        "tags": [
          "Auth"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "grant_type": {
                  "type": "string",
                  "example": "password"
                }
              },
              "required": [
                "email",
                "password",
                "grant_type"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login"
          },
          "422": {
            "description": "invalid request"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "description": "Token based authentication Header. Authenticate and then copy the token into this field and prefix with \"Bearer \" and a space.",
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "components": {
    "schemas": {
      "errors_object": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}