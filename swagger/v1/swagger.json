{
  "swagger": "2.0",
  "info": {
    "title": "API V1",
    "version": "v1"
  },
  "paths": {
    "/api/v1/activities": {
      "get": {
        "summary": "Get Activities List",
        "tags": [
          "Activities"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Activities list",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": null
                },
                "data": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "parent": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/components/schemas/errors_object"
            }
          }
        }
      }
    },
    "/api/v1/albums": {
      "get": {
        "summary": "Get User Albums",
        "tags": [
          "Albums"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Albums list",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": null
                },
                "data": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "user": {
                        "type": "object"
                      },
                      "permission": {
                        "type": "object"
                      },
                      "access_requirement_ids": {
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      },
                      "allow_contributors": {
                        "type": "boolean"
                      },
                      "contributors": {
                        "type": "object"
                      },
                      "post_count": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/components/schemas/errors_object"
            }
          }
        }
      },
      "post": {
        "summary": "Create an Album",
        "tags": [
          "Albums"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "album",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "album": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "permission_id": {
                      "type": "integer"
                    },
                    "access_requirement_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "allow_contributors": {
                      "type": "boolean"
                    },
                    "contributors_attributes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "user_id": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "album"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Album created",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Album is created successfully"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "user": {
                      "type": "object"
                    },
                    "permission": {
                      "type": "object"
                    },
                    "access_requirement_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "allow_contributors": {
                      "type": "boolean"
                    },
                    "contributors": {
                      "type": "object"
                    },
                    "post_count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/components/schemas/errors_object"
            }
          }
        }
      }
    },
    "/api/v1/albums/audience": {
      "get": {
        "summary": "List Album Permission",
        "tags": [
          "Albums"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Albums list permissions",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": null
                },
                "data": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "action_name": {
                        "type": "string"
                      },
                      "action_description": {
                        "type": "string"
                      },
                      "action_emoji": {
                        "type": "string"
                      },
                      "action": {
                        "type": "string"
                      },
                      "action_object": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/components/schemas/errors_object"
            }
          }
        }
      }
    },
    "/api/v1/blocks": {
      "get": {
        "summary": "List of Blocks",
        "tags": [
          "Blocks"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "per",
            "in": "query",
            "type": "integer",
            "value": 25
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "value": 1
          },
          {
            "name": "reference_type",
            "in": "query",
            "type": "string",
            "value": "User",
            "enum": [
              "User",
              "Post",
              "Group"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "List of Followings",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": null
                },
                "data": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "reference_type": {
                        "type": "string"
                      },
                      "block": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/components/schemas/errors_object"
            }
          }
        }
      },
      "post": {
        "summary": "Block",
        "tags": [
          "Blocks"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "block",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "block": {
                  "type": "object",
                  "properties": {
                    "reference_type": {
                      "type": "string",
                      "value": "User",
                      "enum": [
                        "User",
                        "Post",
                        "Group"
                      ]
                    },
                    "reference_id": {
                      "type": "integer"
                    }
                  }
                }
              },
              "required": [
                "block"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Follow user",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "You have blocked succesfully"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "reference_type": {
                      "type": "string"
                    },
                    "block": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/components/schemas/errors_object"
            }
          }
        }
      },
      "delete": {
        "summary": "Unblock",
        "tags": [
          "Blocks"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "block",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "block": {
                  "type": "object",
                  "properties": {
                    "reference_type": {
                      "type": "string",
                      "value": "User",
                      "enum": [
                        "User",
                        "Post",
                        "Group"
                      ]
                    },
                    "reference_id": {
                      "type": "integer"
                    }
                  }
                }
              },
              "required": [
                "block"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unblock",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "You have unblocked succesfully"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "reference_type": {
                      "type": "string"
                    },
                    "block": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "You are not authorized."
                }
              }
            }
          },
          "422": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/components/schemas/errors_object"
            }
          }
        }
      }
    },
    "/api/v1/comments": {
      "post": {
        "summary": "comment on a post",
        "tags": [
          "Comments"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "comment",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "content": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "comment created"
          },
          "422": {
            "description": "Invalid Request"
          }
        }
      }
    },
    "/api/v1/feelings": {
      "get": {
        "summary": "Get Feelings List",
        "tags": [
          "Feelings"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Feelings list",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": null
                },
                "data": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/components/schemas/errors_object"
            }
          }
        }
      }
    },
    "/api/v1/followings": {
      "get": {
        "summary": "List of Followings",
        "tags": [
          "Followings"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "per",
            "in": "query",
            "type": "integer",
            "value": 25
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "value": 1
          }
        ],
        "responses": {
          "200": {
            "description": "List of Followings",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": null
                },
                "data": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "follower": {
                        "type": "object"
                      },
                      "following": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/components/schemas/errors_object"
            }
          }
        }
      },
      "post": {
        "summary": "Follow user",
        "tags": [
          "Followings"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "body",
            "schema": {
              "type": "string",
              "properties": {
                "user_id": {
                  "type": "integer"
                }
              },
              "required": [
                "user_id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Follow user",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "You are now following this user"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "follower": {
                      "type": "object"
                    },
                    "following": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/components/schemas/errors_object"
            }
          }
        }
      }
    },
    "/api/v1/followings/{id}": {
      "delete": {
        "summary": "Unfollow user",
        "tags": [
          "Followings"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "User ID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Unfollow user",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "You are no longer following this user"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "follower": {
                      "type": "object"
                    },
                    "following": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "You are not authorized."
                }
              }
            }
          },
          "422": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/components/schemas/errors_object"
            }
          }
        }
      }
    },
    "/api/v1/friends": {
      "get": {
        "summary": "Get User Friends",
        "tags": [
          "Friends"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Friends list",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": null
                },
                "data": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/components/schemas/errors_object"
            }
          }
        }
      }
    },
    "/api/v1/friendships": {
      "post": {
        "summary": "Create an friendship",
        "tags": [
          "Friendships"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "friendship",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "friendship": {
                  "type": "object",
                  "properties": {
                    "friend_id": {
                      "type": "integer"
                    }
                  }
                }
              },
              "required": [
                "friendship"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "friendship created",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Invitation sent successfully"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "user": {
                      "type": "object"
                    },
                    "friend": {
                      "type": "object"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/components/schemas/errors_object"
            }
          }
        }
      }
    },
    "/api/v1/friendships/{id}/approve": {
      "post": {
        "summary": "Approve a friendship request",
        "tags": [
          "Friendships"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "User ID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "friendship approved",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Friendship request is approved"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "user": {
                      "type": "object"
                    },
                    "friend": {
                      "type": "object"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "You are not authorized."
                }
              }
            }
          },
          "422": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/components/schemas/errors_object"
            }
          }
        }
      }
    },
    "/api/v1/friendships/{id}/decline": {
      "post": {
        "summary": "Decline a friendship request",
        "tags": [
          "Friendships"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "User ID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "friendship approved",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Friendship request is declined"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "user": {
                      "type": "object"
                    },
                    "friend": {
                      "type": "object"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "You are not authorized."
                }
              }
            }
          },
          "422": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/components/schemas/errors_object"
            }
          }
        }
      }
    },
    "/api/v1/friendships/{id}/cancel": {
      "delete": {
        "summary": "Cancel a friendship request",
        "tags": [
          "Friendships"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "User ID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "friendship approved",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Friendship request is cancelled"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "user": {
                      "type": "object"
                    },
                    "friend": {
                      "type": "object"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "You are not authorized."
                }
              }
            }
          },
          "422": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/components/schemas/errors_object"
            }
          }
        }
      }
    },
    "/api/v1/groups": {
      "get": {
        "summary": "Get User Groups",
        "tags": [
          "Groups"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Groups list",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": null
                },
                "data": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "owner": {
                        "type": "object"
                      },
                      "users": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/components/schemas/errors_object"
            }
          }
        }
      },
      "post": {
        "summary": "Create an Group",
        "tags": [
          "Groups"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "group",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "group": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "privacy": {
                      "type": "boolean"
                    },
                    "university": {
                      "type": "string"
                    },
                    "section": {
                      "type": "string"
                    },
                    "president": {
                      "type": "string"
                    },
                    "vice_president": {
                      "type": "string"
                    },
                    "treasure": {
                      "type": "string"
                    },
                    "social_director": {
                      "type": "string"
                    },
                    "secretary": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "calendar_link": {
                      "type": "string"
                    },
                    "groups_users_attributes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "user_id": {
                            "type": "integer"
                          },
                          "_destroy": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "group"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Group created",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Group is created successfully"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "owner": {
                      "type": "object"
                    },
                    "users": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/components/schemas/errors_object"
            }
          }
        }
      }
    },
    "/api/v1/groups/{id}/": {
      "put": {
        "summary": "Update Group Details",
        "tags": [
          "Groups"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "Group ID",
            "required": true
          },
          {
            "name": "group",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "group": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "privacy": {
                      "type": "boolean"
                    },
                    "university": {
                      "type": "string"
                    },
                    "section": {
                      "type": "string"
                    },
                    "president": {
                      "type": "string"
                    },
                    "vice_president": {
                      "type": "string"
                    },
                    "treasure": {
                      "type": "string"
                    },
                    "social_director": {
                      "type": "string"
                    },
                    "secretary": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "calendar_link": {
                      "type": "string"
                    },
                    "groups_users_attributes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "user_id": {
                            "type": "integer"
                          },
                          "_destroy": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "group"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Group created",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Group is updated successfully"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "owner": {
                      "type": "object"
                    },
                    "users": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/components/schemas/errors_object"
            }
          }
        }
      }
    },
    "/api/v1/groups/{id}": {
      "get": {
        "summary": "Group Details",
        "tags": [
          "Groups"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "Group ID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Group Details",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": null
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "owner": {
                      "type": "object"
                    },
                    "users": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/components/schemas/errors_object"
            }
          }
        }
      },
      "delete": {
        "summary": "Leave Group",
        "tags": [
          "Groups"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "Group ID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Group removed successfully"
          },
          "422": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/components/schemas/errors_object"
            }
          }
        }
      }
    },
    "/api/v1/likes": {
      "post": {
        "summary": "like a post",
        "tags": [
          "Likes"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "like",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "like created"
          },
          "422": {
            "description": "Invalid Request"
          }
        }
      }
    },
    "/api/v1/likes/{id}": {
      "delete": {
        "summary": "unlike a post",
        "tags": [
          "Likes"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "Post ID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "unliked"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Invalid Request"
          }
        }
      }
    },
    "/api/v1/posts": {
      "post": {
        "summary": "Create a Post",
        "tags": [
          "Posts"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "post",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "post": {
                  "type": "object",
                  "properties": {
                    "body": {
                      "type": "string"
                    },
                    "publish_date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "parent_id": {
                      "type": "integer"
                    },
                    "parent_type": {
                      "type": "string"
                    },
                    "feeling_id": {
                      "type": "integer"
                    },
                    "activity_id": {
                      "type": "integer"
                    },
                    "permission_id": {
                      "type": "integer"
                    },
                    "access_requirement_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "taggings_attributes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "tagger_id": {
                            "type": "integer"
                          },
                          "tagger_type": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "post"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Post created",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Post is created successfully"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "body": {
                      "type": "string"
                    },
                    "publish_date": {
                      "type": "string"
                    },
                    "parent": {
                      "type": "object"
                    },
                    "feeling": {
                      "type": "string"
                    },
                    "activity": {
                      "type": "string"
                    },
                    "permission": {
                      "type": "object"
                    },
                    "access_requirement_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "tagged_users": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "users": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/components/schemas/errors_object"
            }
          }
        }
      }
    },
    "/api/v1/posts/audience": {
      "get": {
        "summary": "List Post Permission",
        "tags": [
          "Posts"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Posts list permissions",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": null
                },
                "data": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "action_name": {
                        "type": "string"
                      },
                      "action_description": {
                        "type": "string"
                      },
                      "action_emoji": {
                        "type": "string"
                      },
                      "action": {
                        "type": "string"
                      },
                      "action_object": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/components/schemas/errors_object"
            }
          }
        }
      }
    },
    "/api/v1/users/reset_password": {
      "post": {
        "summary": "Reset User Password",
        "tags": [
          "Auth"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "reset_password",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "reset_password_token": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              },
              "required": [
                "reset_password_token",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reset User Password done"
          },
          "422": {
            "description": "invalid request"
          }
        }
      }
    },
    "/api/v1/users/send_otp": {
      "post": {
        "summary": "Send OTP",
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "User created successfully"
          },
          "422": {
            "description": "invalid request"
          }
        }
      }
    },
    "/api/v1/users/update": {
      "put": {
        "summary": "Update User Profile",
        "tags": [
          "Profile"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "class_name": {
                  "type": "string"
                },
                "graduation": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "attending_university": {
                  "type": "string"
                },
                "high_school": {
                  "type": "string"
                },
                "from_location": {
                  "type": "string"
                },
                "gender": {
                  "type": "string"
                },
                "religion": {
                  "type": "string"
                },
                "language": {
                  "type": "string"
                },
                "date_of_birth": {
                  "type": "string"
                },
                "favourite_quotes": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User profile updated successfully"
          },
          "422": {
            "description": "invalid request"
          }
        }
      }
    },
    "/api/v1/users/profile_image": {
      "post": {
        "summary": "Update Profile Pic",
        "tags": [
          "Profile"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "profile_image",
            "in": "formData",
            "type": "file",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Profile pic uploaded successfully"
          },
          "422": {
            "description": "invalid request"
          }
        }
      }
    },
    "/api/v1/users/verify_otp": {
      "post": {
        "summary": "Verify OTP",
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "type": "string",
            "required": true
          },
          {
            "name": "otp",
            "in": "formData",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "User created successfully"
          },
          "422": {
            "description": "invalid request"
          }
        }
      }
    },
    "/api/v1/users/signup": {
      "post": {
        "summary": "Create User",
        "tags": [
          "Auth"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "email",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User created successfully"
          },
          "422": {
            "description": "invalid request"
          }
        }
      }
    },
    "/oauth/token": {
      "post": {
        "summary": "Login",
        "tags": [
          "Auth"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "grant_type": {
                  "type": "string",
                  "example": "password"
                }
              },
              "required": [
                "email",
                "password",
                "grant_type"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login"
          },
          "422": {
            "description": "invalid request"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "description": "Token based authentication Header. Authenticate and then copy the token into this field and prefix with \"Bearer \" and a space.",
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "components": {
    "schemas": {
      "errors_object": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}